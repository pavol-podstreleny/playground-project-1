name: Customer-App-Backend-$(Date:yyyyMMdd)
trigger:
  - backend
  - cicd

variables:
  - name: customerApiTestImageName
    value: palopodstreleny/customer-api-test
    readonly: true
  - name: customerApiImageName
    value: palopodstreleny/customer-api
    readonly: true
  - name: tableStorageImageName
    value: palopodstreleny/table-storage-emulator
    readonly: true
  - name: backendDir
    value: back-end/
    readonly: true
  - name: backendCI
    value: back-end/ci/
    readonly: true

pool:
  name: CoustomerProject

stages:
  - stage: Verify
    displayName: Verify Docker and Docker-Compose dependencies
    jobs:
      - job:
        steps:
          - bash: sh verify.sh
            workingDirectory: ${{variables.backendCI}}

  - stage: Build
    displayName: Build Containers For Backend
    jobs:
      - job:
        steps:
          - bash: sh build.sh
            workingDirectory: ${{variables.backendCI}}

  - stage: Test
    displayName: Test Containers For Backend
    jobs:
      - job:
        steps:
          - bash: sh test.sh
            workingDirectory: ${{variables.backendCI}}
    dependsOn: Build

  - stage: Publish
    displayName: Publish Containers To DockerHub
    jobs:
      - job: Publish_Containers_To_DockerHub
        displayName: Publish Container Customer API To Docker
        steps:
          - task: Docker@2
            displayName: Login To DockerHub
            inputs:
              command: login
              containerRegistry: dockerhub
          - task: Docker@2
            displayName: Pushing Customer API To Dockerhub
            inputs:
              command: push
              repository: ${{variables.customerApiImageName}}
              tags: |
                latest

          - task: Docker@2
            displayName: Pushing Storage Table To Dockerhub
            inputs:
              command: push
              repository: ${{variables.tableStorageImageName}}
              tags: |
                latest

          - task: Docker@2
            inputs:
              command: logout
              containerRegistry: dockerhub

    dependsOn: Test
