name: Customer-App-Backend-$(Date:yyyyMMdd)
trigger:
  - backend

variables:
  - name: customerApiTestImageName
    value: palopodstreleny/customer-api-test:latest
    readonly: true
  - name: customerApiImageName
    value: palopodstreleny/customer-api:latest
    readonly: true
  - name: tableStorageImageName
    value: palopodstreleny/table-storage-emulator:latest
    readonly: true

pool:
  name: CoustomerProject

stages:
  - stage: Build
    displayName: Build Containers For Backend
    jobs:
      - job: "Build_Container_Customer_API_Test"
        displayName: Build Customer API Test Container
        steps:
          - bash: docker image build -t ${{variables.customerApiTestImageName}} .
            workingDirectory: back-end/CustomerAPI

      - job: "Build_Container_Customer_API"
        displayName: Build Customer API Container
        steps:
          - bash: docker image build -t ${{variables.customerApiImageName}} .
            workingDirectory: back-end/CustomerAPI/CustomerAPI/

      - job: "Build_Container_Table_Storage"
        displayName: Build Table Storage Container
        steps:
          - bash: docker image build -t ${{variables.tableStorageImageName}} .
            workingDirectory: back-end/StorageTable/

  - stage: Test
    displayName: Test Containers For Backend
    jobs:
      - job: "Test_Container_Customer_API"
        displayName: Test Customer API Container
        steps:
          - bash: docker container run ${{variables.customerApiTestImageName}}
    dependsOn: Build

  - stage: Publish
    displayName: Publish Containers To DockerHub
    jobs:
      - job: Publish_Container_Customer_API
        displayName: Publish Container Customer API To Docker
        steps:
          - task: Docker@2
            displayName: Login To DockerHub
            inputs:
              command: login
              containerRegistry: dockerhub
          - task: Docker@2
            displayName: Pushing To Dockerhub
            inputs:
              command: push
              repository: ${{variables.customerApiImageName}}
          - task: Docker@2
            inputs:
              command: logout
              containerRegistry: dockerhub

    dependsOn: Test
